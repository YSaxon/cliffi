name: Cross-Platform Build and Test

on:
    push:
        branches:
            - master
    workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        dockcross_image:
            # - dockcross/linux-armv7
            # - dockcross/linux-arm64
            # - dockcross/linux-ppc64le
            - dockcross/linux-x64
            # - dockcross/linux-x86
            # - dockcross/linux-mips
            # - dockcross/linux-mipsel
            # - dockcross/linux-s390x
            # - dockcross/linux-armv5
            # - dockcross/linux-armv6
            # - dockcross/linux-s390x
            # - dockcross/linux-xtensa-uclibc	
            # - dockcross/android-arm
            # - dockcross/android-arm64
            # - dockcross/android-x86
            # - dockcross/android-x86_64

            
        #   - dockcross/windows-static-x64
        #   - dockcross/windows-static-x86
        #   - dockcross/web-wasm

    steps:
      - uses: actions/checkout@v3

      - name: install helper script
        run: |
            docker run --rm ${{ matrix.dockcross_image }} > ./dockcross
            chmod +x ./dockcross

      - name: test dockcross
        run: |
            ./dockcross bash -c "echo hello world"
            

    #   - name: install conan
    #     run: |
    #         ./dockcross pip install conan
    #         ./dockcross bash -c "conan version || echo could not run conan version"
    #         ./dockcross conan profile new --detect default

      - name: install libffi
        run: |
            ./dockcross bash -c "conan --version || conan version || echo could not run conan version"
            ./dockcross bash -c "conan profile detect --force && conan install . --output-folder=build --build=missing || echo notv2"
            # if conanv1 we don't really need to do a profile
            ./dockcross bash -c "(mkdir -p /home/runner/.conan/; echo 'conan-center https://center.conan.io False' >> /home/runner/.conan/registry.txt && conan install . --build=missing) || echo notv1"
            # do a v2 conan install
            ./dockcross bash -c "conan install . --output-folder=build --build=missing --name libffi --version 3.4.4 || echo notv2"
            # do a v1 conan install
            ./dockcross bash -c "conan install . --build=missing libffi/3.4.4@conan/stable || echo notv1"
            


        #     # Conan v1 commands
        #     ./dockcross bash -c "mkdir -p /home/runner/.conan/; echo 'conan-center https://center.conan.io False' >> /home/runner/.conan/registry.txt"
        #   else
        #     # Conan v2 commands
        #     ./dockcross bash -c "conan config set general.skip_ssl_verification=True || echo could not set ssl_verify"
        #   fi
        #   "
        #     # ./dockcross bash -c "conan config set general.ssl_verify=False || echo could not set ssl_verify"
            # ./dockcross bash -c "mkdir -p /home/runner/.conan/ || echo cant mkdir; echo 'conan-center https://center.conan.io False' >> /home/runner/.conan/registry.txt"
            # # ./dockcross bash -c "cat /home/runner/.conan/registry.txt"
            # ./dockcross bash -c "mkdir -p /home/runner/.conan/; echo 'conan-center https://center.conan.io False' >> /home/runner/.conan/registry.txt && conan install . --build=missing"


      - name: Build with CMake
        run: |
            ./dockcross bash -c "find . -name '*.cmake'"
            ./dockcross bash -c "mkdir -p build && cd build && cmake .. -DCMAKE_BUILD_TYPE=Release && cmcmake --build ." # -DCMAKE_TOOLCHAIN_FILE=conan_toolchain.cmake


      - name: Test with CTest
        run: |
            ./dockcross bash -c "ctest --test-dir build --output-on-failure"

      - uses: actions/upload-artifact@v3
        with:
          name: artifacts-${{ matrix.dockcross_image }}
          path: build/