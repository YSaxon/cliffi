name: Cross-Platform Build and Test

permissions:
  contents: write

on:
    push:
        branches:
            - master
    workflow_dispatch:

jobs:

  create_release:
    name: create_release
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: version
        id: version
        # parse the VERSION from main.c
        run: echo ::set-output name=version::$(grep -oP 'VERSION = "\K[^"]+' main.c)-$(echo ${{ github.sha }} | cut -c1-7)

      - name: Create Release
        id: create_release
        if: github.ref == 'refs/heads/master'
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.version.outputs.version }}
          release_name: Release ${{ steps.version.outputs.version }}
          draft: true
          prerelease: true
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}

  build:
    runs-on: ubuntu-latest
    needs: create_release
    strategy:
      fail-fast: false
      matrix:
        dockcross_image:
          - android-arm
          - android-arm64
          - android-x86
          - android-x86_64
          - linux-arm64
          - linux-arm64-lts
          - linux-arm64-full
          - linux-arm64-musl
          - linux-armv5
          - linux-armv5-musl
          - linux-armv5-uclibc
          - linux-armv6
          - linux-armv6-lts
          - linux-armv6-musl
          - linux-armv7
          - linux-armv7-lts
          - linux-armv7a
          - linux-armv7l-musl
          - linux-mips
          - linux-mips-uclibc
          - linux-mips-lts
          - linux-mipsel-lts
          - linux-s390x
          - linux-ppc64le
          - linux-ppc64le-lts
          - linux-riscv32
          - linux-riscv64
          - linux-m68k-uclibc
          - linux-xtensa-uclibc
          - manylinux_2_28-x64
          - manylinux2014-x86
          - manylinux2014-x64
          - linux-i686
          - linux-x86
          - linux-x64
          - linux-x86_64-full
          - linux-x64-clang
          - linux-x64-tinycc
          - web-wasm
          - web-wasi
          - windows-shared-x86
          - windows-shared-x64
          - windows-shared-x64-posix
          - windows-static-x86
          - windows-static-x64
          - windows-static-x64-posix
          - windows-armv7
          - windows-arm64

    steps:
      - uses: actions/checkout@v3

      - name: install helper script
        run: |
            docker run --rm dockcross/${{ matrix.dockcross_image }} > ./dockcross
            chmod +x ./dockcross

      - name: test dockcross
        run: |
            ./dockcross bash -c "echo hello world"

      - name: everything together
        run: |
          ./dockcross bash ./dockcross_buildtest.sh

      # - name: conaninstall
      #   run: |
      #       ./dockcross bash -c "./profile_script.sh && conan install . --output-folder=build --build=missing -pr build"

      # - name: updatecmake
      #   run: |
      #       ./dockcross bash ./update_cmake.sh
      #       sleep 10s

      # - name: cmake
      #   run: |
      #       ./dockcross bash -c "mkdir -p build && rm -rf build/* CMakeCache.txt CMakeFiles && cd build && cmake .."

      # - name: make
      #   run: |
      #       ./dockcross bash -c "cd build && make"

      # - name: ctest
      #   run: |
      #       ./dockcross bash -c "cd build && ctest --output-on-failure"

      - name: get_executable
        id: get_executable
        run: |
          echo "executable=$(ls build/cliffi*)" >> $GITHUB_OUTPUT


      - name: upload
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
            upload_url: ${{ needs.create_release.outputs.upload_url }}
            # it could be plain cliffi or cliffi.exe
            asset_path: ${{ steps.get_executable.outputs.executable }}
            asset_name: cliffi-${{ matrix.dockcross_image }}
            asset_content_type: application/zip
